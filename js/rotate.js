class l extends HTMLElement{constructor(){super();this.handleMouseDown=e=>{this.rotating=!0};this.handleMouseUp=()=>{this.rotating=!1,this.parentElement.parentElement.setAttribute("rotating","false")};this.handleMouseMove=e=>{if(this.rotating){let t,n;e instanceof MouseEvent?(t=e.clientX,n=e.clientY):e instanceof TouchEvent&&(t=e.touches[0].clientX,n=e.touches[0].clientY);const s=this.parentElement,{left:o,top:i,width:a,height:d}=s.getBoundingClientRect(),r=o+a/2,h=i+d/2,u=Math.atan2(n-h,t-r)*180/Math.PI;this.parentElement.style.transform=`rotate(${u}deg)`,this.parentElement.parentElement.setAttribute("rotating","true")}};this.rotating=!1}connectedCallback(){window.addEventListener("mouseup",this.handleMouseUp),window.addEventListener("mousemove",this.handleMouseMove),window.addEventListener("mouseleave",this.handleMouseMove),window.addEventListener("mouseout",this.handleMouseMove),window.addEventListener("mouseleave",this.handleMouseUp),window.addEventListener("touchend",this.handleMouseUp),window.addEventListener("touchmove",this.handleMouseMove),window.addEventListener("touchcancel",this.handleMouseMove),this.addEventListener("mousedown",this.handleMouseDown),this.addEventListener("touchstart",this.handleMouseDown)}}export{l as default};
