import n from"./text-node.js";class o extends HTMLElement{constructor(){super();this.handleMouseDown=e=>{this.resizing=!0,e instanceof MouseEvent?(this.pos3=e.clientX,this.pos4=e.clientY):e instanceof TouchEvent&&(this.pos3=e.touches[0].clientX,this.pos4=e.touches[0].clientY)};this.handleMouseUp=()=>{this.resizing=!1,this.parentElement.parentElement.setAttribute("resizing","false")};this.handleMouseMove=e=>{if(this.resizing){e instanceof MouseEvent?(this.pos1=this.pos3-e.clientX,this.pos2=this.pos4-e.clientY,this.pos3=e.clientX,this.pos4=e.clientY):e instanceof TouchEvent&&(this.pos1=this.pos3-e.touches[0].clientX,this.pos2=this.pos4-e.touches[0].clientY,this.pos3=e.touches[0].clientX,this.pos4=e.touches[0].clientY);const t=this.closest("[node]");t.setAttribute("resizing","true");let s=parseInt(t.dataset.height)-this.pos2,i=parseInt(t.dataset.width)-this.pos1;switch(this.dataset?.direction){case"x":t.style.width=`${i}px`,t.dataset.width=`${i}`;break;case"y":t.style.height=`${s}px`,t.dataset.height=`${s}`;break;default:t.style.width=`${i}px`,t.dataset.width=`${i}`,t.dataset.height=`${s}`,t.style.height=`${s}px`;break}t instanceof n&&t.checkOverflowStatus()}};this.resizing=!1,this.pos1=0,this.pos2=0,this.pos3=0,this.pos4=0}connectedCallback(){window.addEventListener("mouseup",this.handleMouseUp),window.addEventListener("mousemove",this.handleMouseMove),window.addEventListener("mouseleave",this.handleMouseMove),window.addEventListener("mouseout",this.handleMouseMove),window.addEventListener("mouseleave",this.handleMouseUp),window.addEventListener("touchend",this.handleMouseUp),window.addEventListener("touchmove",this.handleMouseMove),window.addEventListener("touchcancel",this.handleMouseMove),this.addEventListener("mousedown",this.handleMouseDown),this.addEventListener("touchstart",this.handleMouseDown)}}export{o as default};
